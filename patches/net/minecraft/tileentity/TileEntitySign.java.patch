--- ../src-base/minecraft/net/minecraft/tileentity/TileEntitySign.java
+++ ../src-work/minecraft/net/minecraft/tileentity/TileEntitySign.java
@@ -1,6 +1,5 @@
 package net.minecraft.tileentity;
 
-import javax.annotation.Nullable;
 import net.minecraft.command.CommandException;
 import net.minecraft.command.CommandResultStats;
 import net.minecraft.command.ICommandSender;
@@ -20,13 +19,17 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import javax.annotation.Nullable;
+
 public class TileEntitySign extends TileEntity
 {
     public final ITextComponent[] signText = new ITextComponent[] {new TextComponentString(""), new TextComponentString(""), new TextComponentString(""), new TextComponentString("")};
     public int lineBeingEdited = -1;
-    private boolean isEditable = true;
+    public boolean isEditable = true;
     private EntityPlayer player;
     private final CommandResultStats stats = new CommandResultStats();
+    private static final boolean CONVERT_LEGACY_SIGNS = Boolean.getBoolean("convertLegacySigns");
+    public java.util.UUID signEditor; // Paper
 
     public NBTTagCompound writeToNBT(NBTTagCompound compound)
     {
@@ -38,6 +41,10 @@
             compound.setString("Text" + (i + 1), s);
         }
 
+        if (CONVERT_LEGACY_SIGNS) { // Paper
+            compound.setBoolean("Bukkit.isConverted", true);
+        }
+
         this.stats.writeStatsToNBT(compound);
         return compound;
     }
@@ -61,6 +68,10 @@
             {
                 return permLevel <= 2; //Forge: Fixes  MC-75630 - Exploit with signs and command blocks
             }
+            public boolean canUseCommand(int permLevel, String commandName, String perm)
+            {
+                return permLevel <= 2; //Forge: Fixes  MC-75630 - Exploit with signs and command blocks
+            }
             public BlockPos getPosition()
             {
                 return TileEntitySign.this.pos;
@@ -79,19 +90,38 @@
             }
         };
 
+        // CraftBukkit start - Add an option to convert signs correctly
+        // This is done with a flag instead of all the time because
+        // we have no way to tell whether a sign is from 1.7.10 or 1.8
+
+        boolean oldSign = Boolean.getBoolean("convertLegacySigns") && !compound.getBoolean("Bukkit.isConverted");
+
         for (int i = 0; i < 4; ++i)
         {
             String s = compound.getString("Text" + (i + 1));
-            ITextComponent itextcomponent = ITextComponent.Serializer.jsonToComponent(s);
+            // ITextComponent itextcomponent = ITextComponent.Serializer.jsonToComponent(s);
+            if (s != null && s.length() > 2048) {
+                s = "\"\"";
+            }
 
             try
             {
-                this.signText[i] = TextComponentUtils.processComponent(icommandsender, itextcomponent, (Entity)null);
+                ITextComponent ichatbasecomponent = ITextComponent.Serializer.jsonToComponent(s);
+
+                if (oldSign) {
+                    signText[i] = org.bukkit.craftbukkit.v1_12_R1.util.CraftChatMessage.fromString(s)[0];
+                    continue;
+                }
+                // CraftBukkit end
+
+                try {
+                    this.signText[i] = TextComponentUtils.processComponent(icommandsender, ichatbasecomponent, (Entity) null);
+                } catch (CommandException commandexception) {
+                    this.signText[i] = ichatbasecomponent;
+                }
+            } catch (com.google.gson.JsonParseException jsonparseexception) {
+                this.signText[i] = new TextComponentString(s);
             }
-            catch (CommandException var7)
-            {
-                this.signText[i] = itextcomponent;
-            }
         }
 
         this.stats.readStatsFromNBT(compound);
@@ -131,7 +161,10 @@
 
     public void setPlayer(EntityPlayer playerIn)
     {
-        this.player = playerIn;
+        // Paper start
+        //this.player = playerIn;
+        signEditor = playerIn != null ? playerIn.getUniqueID() : null;
+        // Paper end
     }
 
     public EntityPlayer getPlayer()
@@ -158,6 +191,11 @@
             {
                 return permLevel <= 2;
             }
+
+            public boolean canUseCommand(int permLevel, String commandName, String perm)
+            {
+                return permLevel <= 2;
+            }
             public BlockPos getPosition()
             {
                 return TileEntitySign.this.pos;
@@ -201,7 +239,12 @@
 
                 if (clickevent.getAction() == ClickEvent.Action.RUN_COMMAND)
                 {
-                    playerIn.getServer().getCommandManager().executeCommand(icommandsender, clickevent.getValue());
+                    // playerIn.getServer().getCommandManager().executeCommand(icommandsender, clickevent.getValue());
+                    CommandBlockBaseLogic.executeSafely(icommandsender, new org.bukkit.craftbukkit.v1_12_R1.command.ProxiedNativeCommandSender(
+                            icommandsender,
+                            new org.bukkit.craftbukkit.v1_12_R1.command.CraftBlockCommandSender(icommandsender),
+                            playerIn.getBukkitEntity()
+                    ), clickevent.getValue());
                 }
             }
         }
