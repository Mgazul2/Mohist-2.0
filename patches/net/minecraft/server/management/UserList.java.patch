--- ../src-base/minecraft/net/minecraft/server/management/UserList.java
+++ ../src-work/minecraft/net/minecraft/server/management/UserList.java
@@ -3,28 +3,7 @@
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.io.Files;
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
-import com.google.gson.JsonDeserializationContext;
-import com.google.gson.JsonDeserializer;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
-import com.google.gson.JsonParseException;
-import com.google.gson.JsonSerializationContext;
-import com.google.gson.JsonSerializer;
-import java.io.BufferedReader;
-import java.io.BufferedWriter;
-import java.io.File;
-import java.io.FileNotFoundException;
-import java.io.IOException;
-import java.io.Reader;
-import java.io.Writer;
-import java.lang.reflect.ParameterizedType;
-import java.lang.reflect.Type;
-import java.nio.charset.StandardCharsets;
-import java.util.Collection;
-import java.util.List;
-import java.util.Map;
+import com.google.gson.*;
 import net.minecraft.util.JsonUtils;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
@@ -32,6 +11,14 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import java.io.*;
+import java.lang.reflect.ParameterizedType;
+import java.lang.reflect.Type;
+import java.nio.charset.StandardCharsets;
+import java.util.Collection;
+import java.util.List;
+import java.util.Map;
+
 public class UserList<K, V extends UserListEntry<K>>
 {
     protected static final Logger LOGGER = LogManager.getLogger();
@@ -59,7 +46,7 @@
     {
         this.saveFile = saveFile;
         GsonBuilder gsonbuilder = (new GsonBuilder()).setPrettyPrinting();
-        gsonbuilder.registerTypeHierarchyAdapter(UserListEntry.class, new UserList.Serializer());
+        gsonbuilder.registerTypeHierarchyAdapter(UserListEntry.class, new Serializer());
         this.gson = gsonbuilder.create();
     }
 
@@ -129,6 +116,7 @@
     }
 
     private void removeExpired()
+
     {
         List<K> list = Lists.<K>newArrayList();
 
@@ -156,6 +144,10 @@
         return this.values;
     }
 
+    public Collection<V> getValuesCB() {
+        return this.values.values();
+    }
+
     public void writeChanges() throws IOException
     {
         Collection<V> collection = this.values.values();
