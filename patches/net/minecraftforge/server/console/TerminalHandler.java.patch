--- ../src-base/minecraft/net/minecraftforge/server/console/TerminalHandler.java
+++ ../src-work/minecraft/net/minecraftforge/server/console/TerminalHandler.java
@@ -19,73 +19,53 @@
 
 package net.minecraftforge.server.console;
 
+import jline.console.ConsoleReader;
+import jline.console.completer.Completer;
+import net.minecraft.util.text.TextFormatting;
 import net.minecraftforge.server.terminalconsole.TerminalConsoleAppender;
 
 import net.minecraft.server.dedicated.DedicatedServer;
-import org.jline.reader.EndOfFileException;
-import org.jline.reader.LineReader;
-import org.jline.reader.LineReaderBuilder;
-import org.jline.reader.UserInterruptException;
-import org.jline.terminal.Terminal;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import red.mohist.util.ConsoleFormatter;
 
+import java.io.IOException;
+
 public final class TerminalHandler
 {
 
+    private static final Logger logger = LogManager.getLogger();
+
     private TerminalHandler()
     {
     }
 
     public static boolean handleCommands(DedicatedServer server)
     {
-        final Terminal terminal = TerminalConsoleAppender.getTerminal();
-        if (terminal == null)
-            return false;
-
-        LineReader reader = LineReaderBuilder.builder()
-                .appName("Forge")
-                .terminal(terminal)
-                .completer(new ConsoleCommandCompleter(server))
-                .build();
-        reader.setOpt(LineReader.Option.DISABLE_EVENT_EXPANSION);
-        reader.unsetOpt(LineReader.Option.INSERT_TAB);
-
-        TerminalConsoleAppender.setReader(reader);
-
-        try
-        {
-            String line;
-            while (!server.isServerStopped() && server.isServerRunning())
-            {
-                try
-                {
-                    line = reader.readLine("> ");
-                }
-                catch (EndOfFileException ignored)
-                {
-                    // Continue reading after EOT
-                    continue;
-                }
-
-                if (line == null)
-                    break;
-
-                line = line.trim();
-                if (!line.isEmpty())
-                {
+        final ConsoleReader reader = TerminalConsoleAppender.getReader();
+        if (reader != null) {
+            TerminalConsoleAppender.setFormatter(new ConsoleFormatter());
+            reader.addCompleter(new ConsoleCommandCompleter(server));
+            while (!server.isServerStopped() && server.isServerRunning()) {
+                try {
+                    String line = reader.readLine("> ");
+                    if (line == null) {
+                        break;
+                    }
+                    line = line.trim();
+                    if (line.isEmpty()) {
+                        continue;
+                    }
                     server.addPendingCommand(line, server);
                 }
+                catch (IOException e) {
+                    TerminalHandler.logger.error("Exception handling console input", (Throwable)e);
+                }
             }
+            return true;
         }
-        catch (UserInterruptException e)
-        {
-            server.initiateShutdown();
-        }
-        finally
-        {
-            TerminalConsoleAppender.setReader(null);
-        }
-
-        return true;
+        TerminalConsoleAppender.setFormatter(TextFormatting::getTextWithoutFormattingCodes);
+        return false;
     }
 
 }
